-- EDA

-- Here we are jsut going to explore the data and find trends or patterns or anything interesting like outliers

-- normally when you start the EDA process you have some idea of what you're looking for

-- with this info we are just going to look around and see what we find!

select *
from layoffs_staging2;


-- Looking at Percentage to see how big these layoffs were

select max(total_laid_off), max(percentage_laid_off)
from layoffs_staging2
where percentage_laid_off is not null;


-- -- Which companies had 1 which is basically 100 percent of they company laid off
select *
from layoffs_staging2
where percentage_laid_off =1;



-- these are mostly startups it looks like who all went out of business during this time
-- if we order by funcd_raised we can see how big some of these companies were
select *
from layoffs_staging2
where percentage_laid_off =1
order by funds_raised desc;
-- BritishVolt looks like an EV company, Quibi! I recognize that company - wow raised like 2 billion dollars and went under - ouch


-- companies with most total layoffs
select company, sum(total_laid_off)
from layoffs_staging2
group by company
order by 2 desc;


-- min and max date of lay offs
select min( `date`), max( `date`)    
from layoffs_staging2;


--  by country wise
-- USA has more laid off omg
select country , sum(total_laid_off)
from layoffs_staging2
group by country
order by 2 desc;



-- each day wise total lay offs
select `date` , sum(total_laid_off)
from layoffs_staging2
group by `date`
order by 1 desc;



-- year wise lay offs
select year(`date`) , sum(total_laid_off)
from layoffs_staging2
group by year(`date`)
order by 1 desc;


select stage , sum(total_laid_off)
from layoffs_staging2
group by stage
order by 2 desc;



-- per month how many lay off
select substring(`date`,1,7) as MONTH , sum(total_laid_off)
 from layoffs_staging2
 where substring(`date`,1,7) is not null
 group by MONTH
 order by 1 asc;


 
 -- Rolling Total of Layoffs Per Month
 with rolling_total as 
 (
 select substring(`date`,1,7) as MONTH , sum(total_laid_off) as total_off
 from layoffs_staging2
 where substring(`date`,1,7) is not null
 group by MONTH
 order by 1 asc
 )
select MONTH, total_off, sum(total_off) over(order by MONTH) as Rolling_total
from rolling_total;


select company , year(`date`), sum(total_laid_off)
from layoffs_staging2
group by company, year(`date`)
order by 3 desc;



-- year wise Top 5 ranking company laid off where i use 2 CTE

with Company_Year(company, years, total_laid_off) as
(
select company , year(`date`), sum(total_laid_off)
from layoffs_staging2
group by company, year(`date`)
), Company_Year_Rank as (
select * , dense_rank() over (partition by years order by total_laid_off desc) as ranking
from Company_Year
where years is not null
)
select * 
from Company_Year_Rank
where ranking <=5;
-- rank which year most laid off
